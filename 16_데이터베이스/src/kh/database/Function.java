package kh.database;

public class Function {
	
/*
    <함수>
        컬럼값을 읽어서 계산한 결과를 반환한다.
            - 단일행 함수 : N 개의 값을 읽어서 N 개의 결과를 리턴한다. (매 행 함수 실행 결과 반환)
            - 그룹 함수 : N 개의 값을 읽어서 1 개의 결과를 리턴한다.
            - SELECT 절에 단일행 함수와 그룹 함수를 함께 사용하지 못한다. (결과 행의 개수가 다르기 때문이다.)
            - 함수를 기술할 수 있는 위치는 SELECT, WHERE, ORDER BY, GROUP BY, HAVING 절에 기술할 수 있다.
*/

// -------------------단일행 함수----------------------
/*
    <문자 관련 함수>
        1) LENGHT / LENGTHB
            - LENGTH(컬럼|'문자값') : 글자 수 반환
            - LENGTHB(컬럼|'문자값') : 글자의 바이트 수 반환
              한글 한 글자 -> 3BYTE
              영문자, 숫자, 특수문자 한 글자 -> 1BYTE
        
        * DUAL 테이블
            - SYS 사용자가 소유하는 테이블
            - SYS 사용자가 소유하지만 모든 사용자가 접근이 가능하다.
            - 한 행, 한 컬럼을 가지고 있는 더미(DUMMY) 테이블이다.
            - 사용자가 함수(계산)을 사용할 때 임시로 사용하는 테이블이다.
*/
	
	/*
    2) INSTR
        - INSTR(컬럼|'문자값', '문자값'[, POSITON][, OCCURENCE])
        - 지정한 위치부터 지정된 숫자 번째로 나타나는 문자의 시작 위치를 반환한다.
*/
	
	/*
    3) LPAD / RPAD
        - LPAD / RPAD(컬럼|'문자값', 최종적으로 반환할 문자의 길이(바이트)[, 덧붙이고자 하는 문자])
        - 제시한 컬럼|'문자값'에 임의의 문자를 왼쪽 또는 오른쪽에 덧붙여 최종 N 길이 만큼의 문자열을 반환한다.
        - 문자에 대해 통일감있게 표시하고자 할 때 사용한다.
*/
	
/*
    4) <LTRIM / RTRIM>
        - LTRIM / RTRIM(컬럼|'문자값'[, 제거하고자 하는 문자값]) -- 제거하고자 하는 문자값이 생략되면 공백이 제거된다.
        - 문자열의 왼쪽 혹은 오른쪽에서 제거하고자 하는 문자들을 찾아서 제거한 결과를 반환한다.
        - 제거하고자 하는 문자값을 생략 시 기본값으로 공백을 제거한다.
*/	
	
/*
    5) TRIM
        - TRIM([[LEADING|TRAILING|BOTH] 제거할 문자 FROM, ] 컬럼|'문자값')
        - 문자열 앞/뒤/양쪽(LEADING/TRAILING/BOTH)에 있는 지정한 문자를 제거한 나머지를 반환한다.
        - 제거하고자 하는 문자값을 생략 시 기본적으로 양쪽의 공백을 모두 제거한다(기본값 BOTH).
*/
	
/*
    6) SUBSTR
        - SUBSTR(컬럼|'문자값', POSITION[, LENGTH])
        - 문자열에서 지정한 위치부터 지장한 개수만큼의 문자열을 추출해서 반환한다.
*/	
	
/*
    7) LOWER / UPPER / INITCAP
     - LOWER / UPPER / INITCAP(컬럼|'문자값')
     - LOWER : 모두 대문자로 변경한다.
     - UPPER : 모두 소문자로 변경한다.
     - INITCAP : 단어 앞 글자마다 대문자로 변경한다.
*/
	
/*
    8) CONCAT
       - CONCAT(컬럼|'문자값', 컬럼|'문자값')
       - 문자열 두개를 전달받아서 하나로 합친 후 결과를 반환한다.
*/	
	
/*
    9) REPLACE
      - REPLACE(컬럼|'문자값', 변경하려고 하는 문자, 변경하고자하는 문자)
      - 컬럼 혹은 문자값에서 "변경하려고 하는 문자"를" 변경하고자 하는 문자"로 변경해서 반환한다/
*/	
	

	
/*
    <숫자 관련 함수>
      1) ABS
        [표현법]
         ABS(NUMBER)
        - 절대값을 구하는 함수
       
     2) MOD
        [표현법]
         MOD(NUMBER, DIVISION)
        - 두 수를 나눈 나머지를 반환해 주는 함수(자바의 % 연산과 동일)
     
     3) ROUND
        [표현법]
         ROUND(NUMBER[, 위치 지정 가능])
        - 반올림 해주는 함수
        - 위치 : 기본 0(. 소수점의 위치) , 양수(소수점 기준으로 오른쪽)와 음수(소수점 기준으로 왼쪽)로 입력가능   
            
     4) CEIL 
        [표현법]
         CEIL(NUMBER)
        - 무조건 올림해주는 함수 
               
     5) FLOOR
        [표현법]
         FLOOR(NUMBER)
        - 소수점 아래를 무조건 버림하는 함수 
        
     6) TRUNC
        [표현법]
         TRUNC(NUMBER[, 위치])
         
        - 위치를 지정하여 버림이 가능한 함수
        - 위치 : 기본 0, 양수(소수점 기준으로 오른쪽)와 음수(소수점 기분으로 왼쪽)로 입력가능
 
*/	
	
/*
    <날짜 처리 함수>
      1) SYSDATE
        [표현법]
         SELECT SYSDATE
         
       - 시스템의 현재 날짜 반환 
       
      2) MONTHS_BETWEEN
        [표현법]
         MONTH_BETWEEN(DATE1, DATE2)
         
       - 입력받는 두 날짜 사이의 개월 수를 반환한다. 
       - 결과값은 NUMBER이다.
       
      3) ADD_MONTHS
         [표현법]
          ADD_MONTHS(DATE,NUMBER)
          
         - 특정 날짜에 입력받는 숫자만큼의 개월 수를 더한 날짜를 리턴한다.
         - 결과값은 DATE이다. 
         
      4) NEXT_DAY
         [표현법]
          NEXT_DAY(DATE, 요일정보(문자|숫자))
         
         - 특정 날짜에서 구하려는 요일의 다가오는 가장 가까운 날짜를 리턴한다.
         - 결과값은 DATE이다.
       
      5) LAST_DATE 
         [표현법]
          LAST_DAY(DATE)
          
        - 해당 월의 마지막 날짜를 반환하는 함수
        - 결과값은 DATE 타입이다.
        
      6) EXTRACT
         [표현법]
         EXTRACT(YEAR FROM DATE)
         EXTRACT(MONTH FROM DATE)
         EXTRACT(DAY FROM DATE)
         
       - 특정 날짜에서 연도, 월, 일 정보를 추출해서 반환한다. 
         YEAR : 연도만 추출 
         MONTH : 월만 추출
         DAY : 일만 추출
       - 결과값은 NUMBER 타입이다           
            
*/	
	
/*
    <형변환 함수>
    
     1) TO_CHAR
       [표현법]
         TO_CHAR(날짜|숫자[, 포멧])
         
       - 날짜 또는 숫자형 타입의 데이터를 문자 타입으로 변환해서 반환한다.
       - 결과값은 CHARACTER이다.
       
     2) TO_DATE
        [표현법]
         TO_DATE(CHARACTER[, FORMAT])
         TO_DATE(NUMBER[, FORMAT])
         
       - 숫자 또는 문자 타입의 데이처를 날짜 타입의 데이터로 변환해서 반환한다.
       - 결과값은 DATE 타입이다.
       
     3) TO_NUMBER
        [표현법]
          TO_NUMBER(CHARACTER[, FORMAT])
          
         - 문자 타입의 데이터를 숫자 타입의 데이터로 변환해서 반환한다.
         - 결과값은 NUMBER 이다.  
        
*/	
	
/*
    <NULL 처리 함수>
     1) NVL
       [표현법]
        NVL(컬럼, 컬럼값이 NULL일 경우 변환할 결과값)
        
      - NULL로 되어있는 컬럼의 값을 인자로 지정한 값으로 변경하여 반환한다.
      
     2) NVL2
       [표현법]
       NVL2(컬럼, 바꿀값1, 바꿀값2)
       
      - 컬럼값이 NULL이 아니면 바꿀값1, 컬럼값이 NULL이면 바꿀값2로 변경하여 반환한다.
        EX) 값을 고정 시키고 싶을때 사용
        
     3) NULLIF
       [표현법]
        NULLIF(비교대상 1, 비교대상 2)
      - 두 개의 값이 동일하면 NULL을 반환, 두 개의 값이 동일하지 않으면 비교대상 1을 제외한다.  
*/	

/*
    <선택 함수>
      여러 가지 경우에 선택을 할 수 있는 기능을 제공하는 함수이다.
      
       1) DECODE
         [표현법]
           DECODE(컬럼|계산식, 조건값1, 결과값2, 조건값2, 결과값2,.... 결과값)
           
         - 비교하고자 하는 값이 조건값과 일치할 경우 그에 해당하는 결과값을 반환해주는 함수이다.
         
       2) CASE
        [표현법]
          CASE WHEN 조건식1 WHEN 결과값 1
               WHEN 조건식1 WHEN 결과값 1
               WHEN 조건식1 WHEN 결과값 1
               ELSE 결과값
           END       

*/
	
/*
    <그룹 함수>
      대량의 데이터들로 집계나 통계같은 작업을 처리해야 하는 경우 사용되는 함수들이다.
      모든 그룹 함수는 NULL 값을 자동으로 제외하고 값이 있는 것들만 계산한다.
      따라서 AVG를 사용할때는 NLV() 함수와 함께 사용하는 것을 권장한다.
      
      1) SUM
        [표현법]
          SUM(NUMBER)
          
        - 해당 컬럼 값들의 총합계를 반환한다.  
        
       2) AVG
        [표현법]
          AVG(NUMBER)
          
        - 해당 컬럼 값들의 평균을 구해서 반환한다.
        
       3) MAX / MIN
         [표현법]
          MAX(모든 타입 컬럼)
          MIN(모든 타입 컬럼)
          
        - MIN : 해당 컬럼 값들 중에 가장 작은 값을 반환한다.
        - MAX : 해당 컬럼 값들 중에 가장 큰 값을 반환한다.  
        
       4) COUNT
        [표현법]
          COUNT(*|컬럼명|DISTINCT 컬럼명)
        
        - 컬럼 또는 행의 개수를 세서 반환하는 함수이다.
        - COUNT(*) : 조회 결과에 해당하는 모든 행의 개수를 반환한다.
        - COUNT(컬럼명) : 제시한 컬럼 값이 NULL이 아닌 행의 개수를 반환한다.
        - COUNT(DISTINCT 컬럼명) : 해당 컬럼 값의 중복을 제거한 행의 개수를 반환한다.  
        
           
        
        
*/	
	
	
	

	
}
